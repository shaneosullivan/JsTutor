@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 210 40% 96%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  html,
  body {
    height: 100%;
    overflow-x: hidden;
    transition: height 0.3s ease-in-out;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Custom styles for the code editor */
.cm-editor {
  height: 100%;
}

.cm-focused {
  outline: none;
}

.cm-scroller {
  font-family: "Fira Code", "Monaco", "Menlo", monospace;
  line-height: 1.5;
}

.cm-error-line {
  background-color: rgba(239, 68, 68, 0.1);
  border-left: 3px solid #ef4444;
}

/* Keyboard responsive styles */
.keyboard-responsive-header {
  transition:
    height 0.4s cubic-bezier(0.4, 0, 0.2, 1),
    padding 0.4s cubic-bezier(0.4, 0, 0.2, 1),
    margin 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  overflow: hidden;
  will-change: height, padding, margin;
}

.keyboard-responsive-header.keyboard-hidden {
  height: 0;
  padding-bottom: 0;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 0;
  pointer-events: none;
}

.keyboard-responsive-container {
  transition:
    height 0.4s cubic-bezier(0.4, 0, 0.2, 1),
    min-height 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: height, min-height;
}

/* Smooth transitions for layout changes */
.layout-transition {
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Prevent layout shifts during keyboard animations */
.keyboard-stable {
  will-change: height, transform;
}

/* Ensure code editor doesn't lose focus during transitions */
.cm-editor.keyboard-active {
  transition: height 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Enhanced keyboard transition effects */
.keyboard-transition {
  transition:
    height 0.4s cubic-bezier(0.4, 0, 0.2, 1),
    min-height 0.4s cubic-bezier(0.4, 0, 0.2, 1),
    max-height 0.4s cubic-bezier(0.4, 0, 0.2, 1),
    padding 0.4s cubic-bezier(0.4, 0, 0.2, 1),
    margin 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: height, padding, margin;
}

/* Smooth content area transitions */
.content-area {
  transition:
    height 0.4s cubic-bezier(0.4, 0, 0.2, 1),
    padding 0.4s cubic-bezier(0.4, 0, 0.2, 1),
    margin 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: height, padding, margin;
}

/* Editor container transitions */
.editor-container {
  transition:
    height 0.4s cubic-bezier(0.4, 0, 0.2, 1),
    max-height 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: height, max-height;
}

/* Mobile viewport adjustments */
@supports (height: 100dvh) {
  .keyboard-responsive-container {
    height: 100dvh;
  }
}

/* iOS Safari specific adjustments */
@supports (-webkit-touch-callout: none) {
  .keyboard-responsive-container {
    /* Use viewport units that respect the keyboard */
    height: 100vh;
    height: 100dvh;
  }

  .ios-keyboard-adjust {
    /* Smooth transition for iOS keyboard */
    transition:
      height 0.4s cubic-bezier(0.4, 0, 0.2, 1),
      min-height 0.4s cubic-bezier(0.4, 0, 0.2, 1),
      transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }
}

/* Document-level keyboard adjustments */
html.keyboard-constrained {
  position: fixed !important;
  width: 100% !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  overflow: hidden !important;
  -webkit-overflow-scrolling: touch;
  overscroll-behavior: none;
  touch-action: none;
}

html.keyboard-constrained body {
  overflow: hidden !important;
  position: relative;
  touch-action: none;
  overscroll-behavior: none;
  -webkit-overflow-scrolling: touch;
  /* Prevent iOS Safari bounce */
  -webkit-user-select: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
}

/* Prevent any accidental scrolling when keyboard is visible */
.keyboard-no-scroll {
  touch-action: none !important;
  -webkit-overflow-scrolling: auto;
  overscroll-behavior: none;
  /* Prevent selection and context menus that can interfere */
  -webkit-user-select: none;
  -webkit-touch-callout: none;
}

/* Allow scrolling only in specific elements when keyboard is visible */
html.keyboard-constrained .cm-scroller,
html.keyboard-constrained .overflow-y-auto,
html.keyboard-constrained .overflow-auto,
html.keyboard-constrained [data-allow-scroll="true"] {
  touch-action: pan-y !important;
  -webkit-overflow-scrolling: touch;
  overscroll-behavior: contain;
}

.tutorial-canvas {
  transition:
    max-height 0.3s ease-in-out,
    max-width 0.3s ease-in-out;
}

/* Extra protection against iOS Safari scrolling */
@supports (-webkit-touch-callout: none) {
  html.keyboard-constrained {
    /* iOS specific fixes */
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }

  html.keyboard-constrained body {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

/* Playful animations for course selection page */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in-up {
  animation: fadeInUp 0.6s ease-out forwards;
  opacity: 0;
}

/* Fun wiggle animation */
@keyframes wiggle {
  0%,
  7% {
    transform: rotateZ(0);
  }
  15% {
    transform: rotateZ(-15deg);
  }
  20% {
    transform: rotateZ(10deg);
  }
  25% {
    transform: rotateZ(-10deg);
  }
  30% {
    transform: rotateZ(6deg);
  }
  35% {
    transform: rotateZ(-4deg);
  }
  40%,
  100% {
    transform: rotateZ(0);
  }
}

.animate-wiggle {
  animation: wiggle 2s ease-in-out infinite;
}

/* Gentle float animation */
@keyframes float {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

/* Gentle scale animation */
.hover\:scale-102:hover {
  transform: scale(1.02);
}

/* Syntax highlighting styles for code blocks */
.hljs {
  background-color: #f8f9fa !important;
  border: 1px solid #e9ecef;
  border-radius: 0.5rem;
  padding: 0.75rem;
  margin: 0.5rem 0;
  font-family: "Fira Code", "Monaco", "Menlo", "Consolas", monospace;
  font-size: 0.875rem;
  line-height: 1.5;
  overflow-x: auto;
}

.hljs-keyword {
  color: #d73a49;
  font-weight: bold;
}

.hljs-string {
  color: #032f62;
}

.hljs-number {
  color: #005cc5;
}

.hljs-comment {
  color: #6a737d;
  font-style: italic;
}

.hljs-function {
  color: #6f42c1;
}

.hljs-variable {
  color: #e36209;
}

/* Improve markdown code block rendering */
.prose code {
  font-family: "Fira Code", "Monaco", "Menlo", "Consolas", monospace !important;
}

.prose pre {
  background-color: #f8f9fa;
  border: 1px solid #e9ecef;
  border-radius: 0.5rem;
  padding: 1rem;
  overflow-x: auto;
  margin: 1rem 0;
}

.prose pre code {
  background-color: transparent !important;
  padding: 0 !important;
  border-radius: 0 !important;
  font-size: 0.875rem;
  line-height: 1.5;
}

/* Inline code styling */
.prose :not(pre) > code {
  background-color: #e9ecef;
  padding: 0.125rem 0.25rem;
  border-radius: 0.25rem;
  font-size: 0.875rem;
  font-weight: 500;
}

.help-prose.prose
  :where(code):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::before {
  content: none;
}

.help-prose.prose
  :where(code):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::after {
  content: none;
}
